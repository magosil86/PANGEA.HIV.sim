args <- commandArgs()
if(!any(args=='--args'))
	args<- vector("numeric",0)
if(any(args=='--args'))
	args<- args[-(1:match("--args", args)) ]
#
#	default args
#
infile			<- file.path('~/Dropbox (Infectious Disease)/PANGEAHIVsim/201507_TreeReconstruction/tree_mvr','150701_Regional_TRAIN4_SIMULATED_tps.rda')	
outfile			<- infile
na.rm.p			<- NA	 
seed			<- 42		
v.mult			<- 1.2
opt.expressions	<- 15e3
reco.opts		<- c(dim=750, costp_l1=0, costp_l2=0.001, costq_l1=0, costq_l2=0.001, nthread=1, lrate=0.003, niter=120)
verbose			<- 1
#
#	read args as specified
#
if(exists("args"))
{
	#	args input
	tmp<- na.omit(sapply(args,function(arg)
					{	switch(substr(arg,2,7),
								infile= return(substr(arg,9,nchar(arg))),NA)	}))
	if(length(tmp)>0) infile<- tmp[1]		
	tmp<- na.omit(sapply(args,function(arg)
					{	switch(substr(arg,2,8),
								outfile= return(substr(arg,10,nchar(arg))),NA)	}))
	if(length(tmp)>0) outfile<- tmp[1]	
}
if(verbose)
{
	cat('\ninput args\n',paste(infile, outfile, sep='\n'))
}
#
#	start script
#
require(ape)
require(data.table)
require(recosystem)
require(PANGEA.HIV.sim)
#
#	read precomputed distances in long format
#
tmp			<- load(infile)
if(length(tmp)!=1)		
	stop("Unexpected length of objects in file",infile)
eval(parse(text=paste("tps<- ",tmp,sep='')))
#
#	get distances and save
#
ph	<- seq.big.mvr(tps, seed=seed, opt.expressions=opt.expressions, v.mult=v.mult, reco.opts=reco.opts, outfile=outfile, verbose=verbose)
#
#	write to file
#
write.tree(ph, file=paste(outfile,'_',paste(reco.opts,collapse='_'),'_mvr.newick',sep=''))
